# MIT License
#
# Copyright (c) 2024 Naoki Takahashi
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

cybergear_socketcan_driver_node:
  primary_id:
    description: Identifier parameter for distinguishing the sender in CAN communication
    type: int
    default_value: 0
    validation:
      bounds<>: [0, 127]
  device_id:
    description: Identifier parameter for specifying the recipient in CAN communication (CyberGear ID)
    type: int
    default_value: 127
    validation:
      bounds<>: [0, 127]
  send_frequency:
    description: Transmission interval parameter for CAN frame (Hz)
    type: double
    default_value: 16.0
    read_only: true
    validation:
      gt<>: 0.0
  update_param_frequency:
    description: Cycle for reflecting parameter changes during node execution (Hz)
    type: double
    default_value: 1.0
    read_only: true
    validation:
      gt<>: 0.0
  joint_name:
    description: Joint name parameter used in JointTrajectory and JointState
    type: string
    default_value: cybergear
    read_only: true
    validation:
      not_empty<>:
  command_topic_type:
    description: Parameter for selecting either JointTrajectory or single target
    type: string
    default_value: trajectory
    read_only: true
    validation:
      one_of<>: [[trajectory, setpoint]]
      not_empty<>:
  # TODO
  #wait_power_on:
  #  type: bool
  #  default_value: false
  pid_gain:
    kp:
      description: Proportional gain parameter for PID control
      type: double
      default_value: 0.3
    kd:
      description: Derivative gain parameter for PID control
      type: double
      default_value: 0.0475
  torque_constant:
    description: Torque constant used in current control
    type: double
    default_value: 0.87
    read_only: true
  temperature:
    scale:
      description: DO NOT CHANGE; CyberGear communication data conversion factor to Celsius
      type: double
      default_value: 0.1
      read_only: true
  anguler_position:
    max:
      description: DO NOT CHANGE; Upper limit of position during CyberGear communication
      type: double
      default_value: 12.56637061
      read_only: true
    min:
      description: DO NOT CHANGE; Lower limit of position during CyberGear communication
      type: double
      default_value: -12.56637061
      read_only: true
  anguler_velocity:
    max:
      description: DO NOT CHANGE; Upper limit of velocity during CyberGear communication
      type: double
      default_value: 30.0
      read_only: true
    min:
      description: DO NOT CHANGE; Lower limit of velocity during CyberGear communication
      type: double
      default_value: -30.0
      read_only: true
  anguler_effort:
    max:
      description: DO NOT CHANGE; Upper limit of effort during CyberGear communication
      type: double
      default_value: 12.0
      read_only: true
    min:
      description: DO NOT CHANGE; Lower limit of effort during CyberGear communication
      type: double
      default_value: -12.0
      read_only: true
  pid_gain_range:
    kp:
      max:
        description: DO NOT CHANGE; Upper limit of proportional gain during CyberGear communication
        type: double
        default_value: 500.0
        read_only: true
      min:
        description: DO NOT CHANGE; Lower limit of proportional gain during CyberGear communication
        type: double
        default_value: 0.0
        read_only: true
    kd:
      max:
        description: DO NOT CHANGE; Upper limit of derivative gain during CyberGear communication
        type: double
        default_value: 5.0
        read_only: true
      min:
        description: DO NOT CHANGE; Lower limit of derivative gain during CyberGear communication
        type: double
        default_value: 0.0
        read_only: true
